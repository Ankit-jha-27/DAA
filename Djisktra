#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <limits.h>


int minDistance(int dist[],bool Visited[],int V){

    int min = INT_MAX;
    int idx;

    for(int i = 0 ; i < V ;i++){
        if(Visited[i] == false && dist[i] <= min){
                min = dist[i];
                idx = i;
        }
    }
    return idx;
}

void printSolution(int dist[],int V){
    printf("Vertex \t distance from source\n");
     for (int i = 0; i < V; i++) {
        if (dist[i] == INT_MAX)
            printf("%d \t\t Infinity\n", i);
        else
            printf("%d \t\t %d\n", i, dist[i]);
    }
}

void djistra(int **graph,int src,int V){
    int dist[V];
    bool Visited[V];

    for(int i = 0 ; i < V ; i++){
        Visited[i] = false;
        dist[i] = INT_MAX;
    }
        dist[src] = 0;

    for(int i = 0 ; i < V-1 ; i++){

        int u = minDistance(dist,Visited,V);
        Visited[u] = true;

        for (int v = 0; v < V; v++){
             if (!Visited[v] && graph[u][v] && dist[u] != INT_MAX 
                && dist[u] + graph[u][v] < dist[v])
                dist[v] = dist[u] + graph[u][v];
        }
           

    }
        printSolution(dist,V);

}

int main(){
    int src;
    int V;
    printf("Enter number of Vertices: ");
    scanf("%d",&V);

    int **graph = (int**)malloc(V*sizeof(int*));
    for (int i = 0; i < V; i++) {
        graph[i] = (int *)malloc(V * sizeof(int));
    }
    printf("Enter Adjacency matrix \n");

    for (int i = 0; i < V; i++){
        for (int j = 0; j < V; j++){
            scanf("%d",&graph[i][j]);
        }
    }

    printf("Enter the source Vertex: ");
    scanf("%d",&src);

    djistra(graph,src,V);
    
}
