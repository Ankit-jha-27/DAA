#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

#define MAX_VERTEX 100


void primMST(int adj[MAX_VERTEX][MAX_VERTEX],int V){
    int parent[MAX_VERTEX];
    int key[MAX_VERTEX];
    int visited[MAX_VERTEX];

    for(int i = 0 ; i < V ; i++){
        visited[i] = 0;
        key[i]= INT_MAX;
    }

    key[0] = 0;
    parent[0] = -1;

    for(int i = 0 ; i < V-1 ; i++){
        int min = INT_MAX;
        int minIdx = -1;

        for(int v = 0 ; v < V ; v++){
            if(visited[v] == 0 && key[v] < min){

                min = key[v];
                minIdx = v;
            }
        }
        visited[minIdx] = 1;

        for(int v = 0 ; v < V ; v++){
            if(adj[minIdx][v] && visited[v] == 0 && adj[minIdx][v] < key[v]){
                parent[v] = minIdx; 
                key[v] = adj[minIdx][v];
            }
        }
    }

    printf("Edge\tweight\n");
    int totalWeight = 0;

    for(int i = 1 ; i < V ; i++){
        printf("%d - %d\t%d\n",parent[i],i,adj[i][parent[i]]);
        totalWeight += adj[i][parent[i]];
    }

    printf("Total weight of MST: %d\n",totalWeight);
}


int main (){

int V;
int adj[MAX_VERTEX][MAX_VERTEX];

printf("Enter the no. of vertices: ");
scanf("%d",&V);

printf("Enter the adjacency matrix (enter 0 for no edge): \n");
for(int i = 0 ; i < V ; i++){
    for(int j = 0 ; j < V ; j++){
        scanf("%d",&adj[i][j]);
    }
}

primMST(adj,V);
return 0;
}

















